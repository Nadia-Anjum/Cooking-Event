{
  "version": 3,
  "sources": ["../app/entry.server.jsx", "../app/db/connectDb.server.js", "../app/db/models.js", "../app/db/seedingDb.server.js", "../app/root.jsx", "../app/components/Nav.jsx", "../app/services/auth.server.jsx", "../app/services/session.server.jsx", "../app/routes/events.$eventId.destroy.jsx", "../app/routes/events.$eventId_.update.jsx", "../app/routes/events.$eventId.jsx", "../app/components/EventCard.jsx", "../app/routes/events._index.jsx", "../app/routes/add-event.jsx", "../app/routes/profile.jsx", "../app/routes/signin.jsx", "../app/routes/signup.jsx", "../app/routes/_index.jsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/**\r\n * By default, Remix will handle generating the HTTP Response for you.\r\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\r\n * For more information, see https://remix.run/file-conventions/entry.server\r\n */\r\n\r\nimport { PassThrough } from \"node:stream\";\r\n\r\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport * as isbotModule from \"isbot\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\nimport connectDb from \"./db/connectDb.server\";\r\nimport seedDb from \"./db/seedingDb.server\";\r\n\r\n// Connect to MongoDB (reusing the connection if it already exists)\r\nconnectDb();\r\n// Seed the database with some initial data if empty\r\nawait seedDb();\r\n\r\nconst ABORT_DELAY = 5_000;\r\n\r\nexport default function handleRequest(\r\n  request,\r\n  responseStatusCode,\r\n  responseHeaders,\r\n  remixContext,\r\n) {\r\n  return isBotRequest(request.headers.get(\"user-agent\"))\r\n    ? handleBotRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext,\r\n      )\r\n    : handleBrowserRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext,\r\n      );\r\n}\r\n\r\n// We have some Remix apps in the wild already running with isbot@3 so we need\r\n// to maintain backwards compatibility even though we want new apps to use\r\n// isbot@4.  That way, we can ship this as a minor Semver update to @remix-run/dev.\r\nfunction isBotRequest(userAgent) {\r\n  if (!userAgent) {\r\n    return false;\r\n  }\r\n\r\n  // isbot >= 3.8.0, >4\r\n  if (\"isbot\" in isbotModule && typeof isbotModule.isbot === \"function\") {\r\n    return isbotModule.isbot(userAgent);\r\n  }\r\n\r\n  // isbot < 3.8.0\r\n  if (\"default\" in isbotModule && typeof isbotModule.default === \"function\") {\r\n    return isbotModule.default(userAgent);\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction handleBotRequest(\r\n  request,\r\n  responseStatusCode,\r\n  responseHeaders,\r\n  remixContext,\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let shellRendered = false;\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onAllReady() {\r\n          shellRendered = true;\r\n          const body = new PassThrough();\r\n          const stream = createReadableStreamFromReadable(body);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(stream, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            }),\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error) {\r\n          reject(error);\r\n        },\r\n        onError(error) {\r\n          responseStatusCode = 500;\r\n          // Log streaming rendering errors from inside the shell.  Don't log\r\n          // errors encountered during initial shell rendering since they'll\r\n          // reject and get logged in handleDocumentRequest.\r\n          if (shellRendered) {\r\n            console.error(error);\r\n          }\r\n        },\r\n      },\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n\r\nfunction handleBrowserRequest(\r\n  request,\r\n  responseStatusCode,\r\n  responseHeaders,\r\n  remixContext,\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let shellRendered = false;\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onShellReady() {\r\n          shellRendered = true;\r\n          const body = new PassThrough();\r\n          const stream = createReadableStreamFromReadable(body);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(stream, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            }),\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error) {\r\n          reject(error);\r\n        },\r\n        onError(error) {\r\n          responseStatusCode = 500;\r\n          // Log streaming rendering errors from inside the shell.  Don't log\r\n          // errors encountered during initial shell rendering since they'll\r\n          // reject and get logged in handleDocumentRequest.\r\n          if (shellRendered) {\r\n            console.error(error);\r\n          }\r\n        },\r\n      },\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n", "import mongoose from \"mongoose\";\r\nimport { models } from \"./models.js\";\r\n\r\nconst { MONGODB_URL, NODE_ENV } = process.env;\r\n\r\nif (!MONGODB_URL) {\r\n  const errorMessage =\r\n    NODE_ENV === \"production\"\r\n      ? \"Please define the MONGODB_URL environment variable \u2014 pointing to your full connection string, including database name.\"\r\n      : \"Please define the MONGODB_URL environment variable inside an .env file \u2014 pointing to your full connection string, including database name.\";\r\n  throw new Error(errorMessage);\r\n}\r\n\r\n// Call this function from entry.server.jsx. We reuse an existing Mongoose db\r\n// connection to avoid creating multiple connections in dev mode when Remix\r\n// \"purges the require cache\" when reloading on file changes.\r\nexport default function connectDb() {\r\n  // Just for logging purposes:\r\n  let modelCreationType = \"Creating\";\r\n\r\n  if (NODE_ENV === \"development\") {\r\n    // In development mode, we want to overwrite any existing models to ensure\r\n    // we pick up any changes made in schemas.\r\n    mongoose.set(\"overwriteModels\", true);\r\n    // If we have any models already, log out that we're overwriting them:\r\n    if (Object.keys(mongoose.models).length > 0) {\r\n      modelCreationType = \"Overwriting\";\r\n    }\r\n  }\r\n\r\n  console.log(\r\n    // E.g. \"Mongoose: Creating 2 models (Book, Author)\"\r\n    \"Mongoose: %s %d %s (%s)\",\r\n    modelCreationType,\r\n    models.length,\r\n    models.length === 1 ? \"model\" : \"models\",\r\n    models.map((model) => model.name).join(\", \"),\r\n  );\r\n\r\n  // Create or overwrite the models exported from ./models.js:\r\n  for (const model of models) {\r\n    mongoose.model(model.name, model.schema, model.collection);\r\n  }\r\n\r\n  // Reuse the existing Mongoose connection if we have one...\r\n  // https://mongoosejs.com/docs/api/connection.html#connection_Connection-readyState\r\n  const readyState = mongoose.connection.readyState;\r\n  if (readyState > 0) {\r\n    console.log(\r\n      \"Mongoose: Re-using existing connection (readyState: %d)\",\r\n      readyState,\r\n    );\r\n    return;\r\n  }\r\n\r\n  // If no connection exists yet, set up event logging...\r\n  // https://mongoosejs.com/docs/connections.html#connection-events\r\n  mongoose.connection.on(\"error\", (error) => {\r\n    console.error(\"Mongoose: error %s\", error);\r\n  });\r\n\r\n  for (const event of [\"connected\", \"reconnected\", \"disconnected\", \"close\"]) {\r\n    mongoose.connection.on(event, () => console.log(\"Mongoose: %s\", event));\r\n  }\r\n\r\n  // ...and create a new connection:\r\n  mongoose.connect(MONGODB_URL).catch((error) => {\r\n    console.error(error);\r\n  });\r\n}\r\n", "import { mongoose } from \"mongoose\";\r\nimport bcrypt from \"bcrypt\";\r\n\r\nconst { Schema } = mongoose;\r\n\r\n\r\n// ========== models ========== //\r\n\r\nconst eventSchema = new Schema(\r\n  {\r\n    title: String,\r\n    date: String,\r\n    time: String,\r\n    location: String,\r\n    image: String,\r\n    caption: String,\r\n    tags: [String],\r\n    user: {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n    },\r\n    attendees: [{ type: mongoose.Schema.Types.ObjectId, ref: 'User' }], //New field for attendees\r\n    comments: [\r\n      {\r\n        user: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },\r\n        content: String,\r\n        createdAt: { type: Date, default: Date.now }\r\n      }\r\n    ]\r\n  },\r\n  {timestamps: true},\r\n);\r\n\r\n\r\nconst userSchema = new mongoose.Schema(\r\n  {\r\n    image: String,\r\n    mail: {\r\n      type: String,\r\n      required: true, // Ensure user emails are required\r\n      unique: true // Ensure user emails are unique\r\n    },\r\n    name: String,\r\n    lastname: String,\r\n    title: String,\r\n    password: {\r\n      type: String,\r\n      required: true, // Ensure user passwords are required\r\n      select: false // Automatically exclude from query results\r\n    },\r\n    eventsAttending: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Event' }], // New field for events attending\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nconst commentSchema = new Schema(\r\n  {\r\n    content: String,\r\n    user: {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n    },\r\n    event: {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: \"Event\",\r\n    },\r\n  },\r\n  { timestamps: true },\r\n);\r\n\r\n// pre save password hook\r\nuserSchema.pre(\"save\", async function (next) {\r\n  const user = this; // this refers to the user document\r\n\r\n  // only hash the password if it has been modified (or is new)\r\n  if (!user.isModified(\"password\")) {\r\n    return next(); // continue\r\n  }\r\n\r\n  const salt = await bcrypt.genSalt(10); // generate a salt\r\n  user.password = await bcrypt.hash(user.password, salt); // hash the password\r\n  next(); // continue\r\n});\r\n\r\n\r\n// For each model you want to create, please define the model's name, the\r\n// associated schema (defined above), and the name of the associated collection\r\n// in the database (which will be created automatically).\r\nexport const models = [\r\n  {\r\n    name: \"Event\",\r\n    schema: eventSchema,\r\n    collection: \"event\",\r\n  },\r\n  {\r\n    name: \"User\",\r\n    schema: userSchema,\r\n    collection: \"user\",\r\n  },\r\n  {\r\n    name: \"Comment\",\r\n    schema: commentSchema,\r\n    collection: \"comment\",\r\n  },\r\n];", "import mongoose from \"mongoose\";\r\n\r\nexport default async function seedDb() {\r\n  const eventCount = await mongoose.models.Event.countDocuments();\r\n  if (eventCount === 0) {\r\n    console.log(\"Seeding database...\");\r\n    insertData();\r\n  }\r\n}\r\n\r\nasync function insertData() {\r\n  const events = [\r\n    {\r\n      image: \"https://images.unsplash.com/photo-1507048331197-7d4ac70811cf?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n      likes: 0,\r\n      caption: \"Unlock the art of mexican cuisine at our cooking event!\", \r\n      title: \"Mexican cooking event\",\r\n      location: \"Copenhagen, Denmark\",\r\n      date: new Date(\"2024-01-03\"),\r\n    },\r\n    {\r\n      image: \"https://plus.unsplash.com/premium_photo-1665394004212-0d014eb6da68?q=80&w=1778&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n      likes: 20,\r\n      caption: \"Experience the fusion of flavor and wellness at our gourmet cooking class for nutritious meals!\", \r\n      title: \"A healthy meal for a healthy life\",\r\n      location: \"Copenhagen, Denmark\",\r\n      date: new Date(\"2024-01-04\"),\r\n    },\r\n    {\r\n      image: \"https://images.unsplash.com/photo-1547592180-85f173990554?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n      likes: 30,\r\n      caption: \"Brunch time! get ready to learn how to make the best brunch ever!\", \r\n      title: \"Good brunch for good people\",\r\n      location: \"Copenhagen, Denmark\",\r\n      date: new Date(\"2024-01-06\"),\r\n    },\r\n  ];\r\n  await mongoose.models.Event.insertMany(events);\r\n\r\n  const users = [\r\n    {\r\n      image: \"https://images.unsplash.com/photo-1547592180-85f173990554?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n      mail: \"john@doe.dk\",\r\n      name: \"John Doe\",\r\n      lastname: \"Doe2\",\r\n      title: \"Chef\",\r\n      password: \"password\",\r\n    },\r\n  ];\r\n  await mongoose.models.User.insertMany(users);\r\n}\r\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData } from\n\"@remix-run/react\";\nimport styles from \"./tailwind.css\";\nimport Nav from \"./components/Nav\";\nimport { authenticator } from \"./services/auth.server\";\nimport { json } from \"@remix-run/node\";\n\nexport const links = () => [\n{\n  rel: \"stylesheet\",\n  href: styles\n}];\n\n\nexport function meta() {\n  return [{ title: \"Cooking Classes\" }];\n}\n\nexport async function loader({ request }) {\n  const user = await authenticator.isAuthenticated(request);\n  return json({ isAuthenticated: !!user });\n}\n\nexport default function App() {\n  const user = useLoaderData();\n  console.log(user);\n\n  return (\n    <html lang=\"en\">\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n            <Nav />\r\n                <Outlet />\r\n                <ScrollRestoration />\r\n                <Scripts />\r\n                <LiveReload />\r\n            </body>\r\n    </html>);\n\n}", "import { NavLink } from \"@remix-run/react\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { useState } from 'react';\r\nimport { FaMoon, FaSun } from 'react-icons/fa';\r\nimport { FiMenu } from 'react-icons/fi'; \r\n\r\nexport default function Nav() {\r\n  const user = useLoaderData();\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [navOpen, setNavOpen] = useState(false); \r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n    document.documentElement.setAttribute('data-theme', darkMode ? 'light' : 'dark');\r\n  };\r\n\r\n  const toggleNav = () => {\r\n    setNavOpen(!navOpen); \r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <NavLink className=\"logo\" to=\"/events\">CK-EVENT</NavLink>\r\n      <FiMenu className=\"burger\" onClick={toggleNav} /> {/* Burger menu icon */}\r\n      <div className={`nav-links ${navOpen ? 'open' : ''}`} id=\"navLinks\"> {/* Add 'open' class when navOpen is true */}\r\n        <NavLink to=\"/events\">Events</NavLink>\r\n        {!user.isAuthenticated && <NavLink to=\"/signin\">Sign in</NavLink>}\r\n        {user.isAuthenticated && (\r\n        <>\r\n          <NavLink to=\"/add-event\">Add event</NavLink>\r\n          <NavLink to=\"/profile\">Profile</NavLink>\r\n        </>\r\n        )}\r\n        <div \r\n          className=\"toggle-button\" \r\n          onClick={toggleDarkMode} \r\n          onKeyDown={(e) => e.key === 'Enter' && toggleDarkMode()} \r\n          role=\"button\" \r\n          tabIndex={0}\r\n        >\r\n          {darkMode ? <FaSun /> : <FaMoon />}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}", "// app/services/auth.server.ts\r\nimport { Authenticator, AuthorizationError } from \"remix-auth\";\r\nimport { sessionStorage } from \"./session.server\";\r\nimport { FormStrategy } from \"remix-auth-form\";\r\nimport bcrypt from \"bcrypt\";\r\nimport mongoose from \"mongoose\";\r\n\r\n// Create an instance of the authenticator, pass a generic with what\r\n// strategies will return and will store in the session\r\n\r\nexport let authenticator = new Authenticator(sessionStorage, {\r\n    sessionErrorKey: \"sessionErrorKey\" // keep in sync\r\n  });\r\n\r\n// Tell the Authenticator to use the form strategy\r\nauthenticator.use(\r\n  new FormStrategy(async ({ form }) => {\r\n    let mail = form.get(\"mail\");\r\n    let password = form.get(\"password\");\r\n    let user = null;\r\n\r\n    if (!mail || mail.trim().length === 0) {\r\n      throw new AuthorizationError(\"Bad Credentials: Email is required\");\r\n    }\r\n\r\n    if (!password || password.trim().length === 0) {\r\n      throw new AuthorizationError(\"Bad Credentials: Password is required\");\r\n    }\r\n\r\n    user = await verifyUser({ mail, password });\r\n    if (!user) {\r\n      throw new AuthorizationError(\"User not found\");\r\n    }\r\n    \r\n    console.log(user);\r\n    return user;\r\n  }),\r\n  \"user-pass\"\r\n);\r\n  \r\n  async function verifyUser({ mail, password }) {\r\n    const user = await mongoose.models.User.findOne({ mail }).select(\"+password\");\r\n  if (!user) {\r\n    throw new AuthorizationError(\"No user found with this email.\");\r\n  }\r\n\r\n  const passwordMatch = await bcrypt.compare(password, user.password);\r\n  if (!passwordMatch) {\r\n    throw new AuthorizationError(\"Invalid password.\");\r\n  }\r\n  // Remove the password from the user object before returning it\r\n  user.password = undefined;\r\n  return user;\r\n\r\n  }", "// app/services/session.server.jsx\r\nimport { createCookieSessionStorage } from \"@remix-run/node\";\r\n\r\n// export the whole sessionStorage object\r\nexport let sessionStorage = createCookieSessionStorage({\r\n  cookie: {\r\n    name: \"_session\", // any names can be used here\r\n    sameSite: \"lax\", // this helps with CSRF\r\n    path: \"/\", // all routes have access to the session\r\n    httpOnly: true, // for security reasons, make this cookie http only\r\n    secrets: [\"s3cr3t\"], \r\n    secure: process.env.NODE_ENV === \"production\", // enable this in prod only\r\n  },\r\n});\r\n\r\n// export the functions individually\r\nexport let { getSession, commitSession, destroySession } = sessionStorage;", "import { redirect } from \"@remix-run/node\";\r\nimport mongoose from \"mongoose\";\r\n\r\n// This action will delete the event and redirect to /events\r\nexport async function action({ params }) {\r\n  await mongoose.models.Event.findByIdAndDelete(params.eventId).populate(\"user\"); \r\n  return redirect(\"/events\"); \r\n}\r\n", "import { json, redirect } from \"@remix-run/node\";\r\nimport { Form, useLoaderData, useNavigate } from \"@remix-run/react\";\r\nimport mongoose from \"mongoose\";\r\nimport { useState } from \"react\";\r\nimport { authenticator } from \"../services/auth.server\";\r\n\r\n\r\nexport async function loader({ params, request }) {\r\n  await authenticator.isAuthenticated(request, {\r\n    failureRedirect: \"/signin\",\r\n  });\r\n\r\n  const event = await mongoose.models.Event.findById(params.eventId).populate(\"user\");\r\n  return json({ event });\r\n}\r\n\r\nexport default function UpdateEvent() {\r\n  const { event } = useLoaderData();\r\n  const [image, setImage] = useState(event.image);\r\n  const navigate = useNavigate();\r\n\r\n  function handleCancel() {\r\n    navigate(-1);\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <h1>Update Post</h1>\r\n      <Form id=\"event-form\" method=\"post\">\r\n      <div className=\"form-row\">\r\n      <div className=\"form-column\">\r\n\r\n      <label htmlFor=\"title\">Title</label>\r\n      <input id=\"title\" name=\"title\" type=\"text\" defaultValue={event.title} placeholder=\"Event Title...\" />\r\n\r\n        <label htmlFor=\"caption\">Caption</label>\r\n        <input\r\n          id=\"caption\"\r\n          defaultValue={event.caption}\r\n          name=\"caption\"\r\n          type=\"text\"\r\n          aria-label=\"caption\"\r\n          placeholder=\"Write a caption...\"\r\n        />\r\n\r\n        <label htmlFor=\"date\">Date</label>\r\n        <input id=\"date\" name=\"date\" type=\"date\" defaultValue={event.date} />\r\n\r\n        <label htmlFor=\"time\">Time</label>\r\n        <input id=\"time\" name=\"time\" type=\"time\" defaultValue={event.time} />\r\n        </div>\r\n\r\n\r\n        <div className=\"form-column\">\r\n        <label htmlFor=\"location\">Location</label>\r\n        <input id=\"location\" name=\"location\" type=\"text\" defaultValue={event.location} placeholder=\"Event Location...\" />\r\n\r\n        <label htmlFor=\"image\">Image URL</label>\r\n        <input\r\n          name=\"image\"\r\n          defaultValue={event.image}\r\n          type=\"url\"\r\n          onChange={(e) => setImage(e.target.value)}\r\n          placeholder=\"Paste an image URL...\"\r\n        />\r\n\r\n        <label htmlFor=\"image-preview\">Image Preview</label>\r\n        <img\r\n          id=\"image-preview\"\r\n          className=\"image-preview\"\r\n          src={image ? image : \"https://placehold.co/600x400?text=Paste+an+image+URL\"}\r\n          alt=\"Choose\"\r\n          onError={(e) => (e.target.src = \"https://placehold.co/600x400?text=Error+loading+image\")}\r\n        />\r\n        </div>\r\n        </div>\r\n\r\n\r\n        <input name=\"uid\" type=\"text\" defaultValue={event.uid} hidden />\r\n        <div className=\"btns\">\r\n          <button>Save</button>\r\n          <button type=\"button\" className=\"btn-cancel\" onClick={handleCancel}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport async function action({ request, params }) {\r\n  \r\n  const authUser = await authenticator.isAuthenticated(request, {\r\n    failureRedirect: \"/signin\",\r\n  });\r\n\r\n  // Fetch the event to check if the current user is the creator\r\n  const eventToUpdate = await mongoose.models.Event.findById(params.eventId);\r\n\r\n  if (eventToUpdate.user.toString() !== authUser._id.toString()) {\r\n    // User is not the creator of the event, redirect\r\n    return redirect(`/events/${params.eventId}`);\r\n  }\r\n\r\n  const formData = await request.formData();\r\n  const event = Object.fromEntries(formData);\r\n\r\n  eventToUpdate.caption = event.caption;\r\n  eventToUpdate.image = event.image;\r\n  eventToUpdate.location = event.location;\r\n  eventToUpdate.time = event.time;\r\n  eventToUpdate.date = event.date;\r\n  eventToUpdate.title = event.title;\r\n\r\n  await eventToUpdate.save();\r\n\r\n  return redirect(`/events/${params.eventId}`);\r\n}", "import { json, redirect } from \"@remix-run/node\";\r\nimport { Form, useLoaderData } from \"@remix-run/react\";\r\nimport mongoose from \"mongoose\";\r\nimport EventCard from \"../components/EventCard\";\r\nimport { authenticator } from \"../services/auth.server\";\r\nimport { sessionStorage } from \"../services/session.server\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport async function loader({ request, params }) {\r\n  \r\n  let authUser = null;\r\n  // Check if the user is authenticated\r\n  try {\r\n    authUser = await authenticator.isAuthenticated(request);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n\r\n  // Load the event and the user who created it\r\n  const event = await mongoose.models.Event.findById(params.eventId).populate(\"user\").populate(\"attendees\").populate({\r\n    path: 'comments.user',\r\n    model: 'User'\r\n  })\r\n  .exec();\r\n\r\n  // Load similar events created by the same user\r\n  const similarEvents = await mongoose.models.Event.find({ user: event.user._id }).populate('user').limit(5).exec();\r\n\r\n  return json({ event, authUser, similarEvents });\r\n}\r\n\r\nexport default function Event() {\r\n  const { event, authUser, similarEvents } = useLoaderData();\r\n  console.log(\"EVENT\",event);\r\n\r\n  function confirmDelete(event) {\r\n    const response = confirm(\"Please confirm you want to delete this post event.\");\r\n    if (!response) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"event-page\" className=\"page page2\">\r\n      <div className=\"column1\">\r\n      <EventCard event={event} />\r\n      {authUser && authUser._id === event.user._id && (\r\n        <div className=\"btns\">\r\n          <Form action=\"update\">\r\n            <button>Update</button>\r\n          </Form>\r\n          <Form action=\"destroy\" method=\"post\" onSubmit={confirmDelete}>\r\n            <button>Delete</button>\r\n          </Form>\r\n        </div>\r\n      )}\r\n      </div>\r\n\r\n\r\n      <div className=\"column2\">\r\n        <div className=\"att-main\">\r\n\r\n      <div className=\"attend-container\">\r\n        <h2>Join Now: Get Involved in This Event!</h2>\r\n        <p>Get ready to tantalize your taste buds! Whether you are a seasoned chef or just love good food, join our thrilling cooking event now!</p>\r\n        {authUser && event.attendees && !event.attendees.includes(authUser._id) && (\r\n          <Form action=\"\" method=\"post\">\r\n            <button>Join here</button>\r\n          </Form>\r\n        )}\r\n      </div>\r\n      <ul className=\"att-outcome\">\r\n        <h2>Attendees</h2>\r\n        {event.attendees && event.attendees.map(user => (\r\n          <li key={user._id}>{user.name} {user.lastname}</li>\r\n        ))}\r\n      </ul>\r\n\r\n      </div>\r\n\r\n\r\n      <div className=\"comment-section\">\r\n        <h2>Comments</h2>\r\n        {authUser && (\r\n          <Form action=\"\" method=\"post\">\r\n            <textarea name=\"content\" required></textarea>\r\n            <button type=\"submit\">Post Comment</button>\r\n          </Form>\r\n        )}\r\n        <ul className=\"comment-outcome-ul\">\r\n          {event.comments.map((comment, index) => (\r\n            <li key={index} className=\"comment-info\">\r\n              <p>{comment.content}</p>\r\n              <p>Posted by: {comment.user ? `${comment.user.name}` : 'Unknown'}</p>\r\n              <p style={{ textAlign: 'end' }}>Posted at: {new Date(comment.createdAt).toLocaleString()}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      </div>\r\n\r\n      <div className=\"similar-events-main\">\r\n        <h2 className=\"s-h2\">Similar Events</h2>\r\n        <div className=\"similar-events\">\r\n          {similarEvents.map(similarEvent => (\r\n            <Link to={`/events/${similarEvent._id}`} key={similarEvent._id}>\r\n              <EventCard event={similarEvent} />\r\n            </Link>\r\n          ))}\r\n        </div> \r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport async function action({ request, params }) {\r\n  const session = await sessionStorage.getSession(request.headers.get(\"Cookie\"));\r\n\r\n  const authUser = session.get(\"user\");\r\n  const eventId = params.eventId;\r\n\r\n  if (!authUser) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  const User = mongoose.models.User;\r\n  const Event = mongoose.models.Event;\r\n\r\n  const user = await User.findById(authUser._id);\r\n  const event = await Event.findById(eventId);\r\n\r\n  if (request.method === 'POST') {\r\n    const formData = await request.formData();\r\n    const content = formData.get('content');\r\n\r\n    if (content) { // If the form has a 'content' field, it's a comment\r\n      const Comment = mongoose.models.Comment;\r\n      const comment = new Comment({ content, user: authUser._id, event: eventId }); // Tilknyt authUser._id til kommentaren\r\n      await comment.save();\r\n    \r\n      event.comments.push(comment);\r\n      await event.save();\r\n    }\r\n  }\r\n\r\n  // Always allow attendance, regardless of request method\r\n  if (event.attendees && !event.attendees.includes(authUser._id)) {\r\n    event.attendees.push(authUser._id);\r\n    await event.save();\r\n  }\r\n\r\n  if (user.eventsAttending && !user.eventsAttending.includes(eventId)) {\r\n    user.eventsAttending.push(eventId);\r\n    await user.save();\r\n  }\r\n\r\n  return redirect(`/events/${eventId}`);\r\n}", "export default function EventCard({ event }) {\r\n  return (\r\n    <article className=\"event-card\">\r\n      <h2>{event.title}</h2>\r\n      <img src={event.image} alt={event.caption} />\r\n      <p>Event by: {event.user ? `${event.user.name} ${event.user.lastname}` : 'Unknown'}</p>\r\n      <h3>{event.caption}</h3>\r\n      <p>{event.date}, {event.time}</p>\r\n      <p>{event.location}</p>\r\n    </article>\r\n  );\r\n}\r\n", "import { json } from \"@remix-run/node\";\r\nimport { Link, useLoaderData, useSearchParams } from \"@remix-run/react\";\r\nimport EventCard from \"../components/EventCard\";\r\nimport mongoose from \"mongoose\";\r\nimport { useState } from \"react\";\r\nimport { Form } from \"@remix-run/react\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nexport async function loader({ request }) {\r\n    const url = new URL(request.url);\r\n    const searchParams = new URLSearchParams(url.search); // get the search query from the URL\r\n    const searchQuery = searchParams.get('search') || '';\r\n\r\n    let query = {};\r\n\r\n    // If there is a search query, we will search for events that match the query\r\n    if (searchQuery) {\r\n        query = {\r\n            $or: [\r\n                { title: { $regex: searchQuery, $options: 'i' } },\r\n                { date: { $regex: searchQuery, $options: 'i' } },\r\n                { location: { $regex: searchQuery, $options: 'i' } },\r\n            ]\r\n        };\r\n    }\r\n\r\n    const events = await mongoose.models.Event\r\n        .find(query)\r\n        .populate(\"user\")\r\n        .sort({ createdAt: -1 })\r\n        .exec();\r\n\r\n    return json({ events });\r\n}\r\n\r\nexport default function Index() {\r\n    const { events } = useLoaderData();\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const searchQuery = searchParams.get('search') || ''; \r\n  \r\n    // Add a new state variable for loading state\r\n    const [isLoading, setIsLoading] = useState(false);\r\n  \r\n    // This function will handle the search form submission\r\n    const handleSearch = (event) => {\r\n        event.preventDefault();\r\n\r\n        const searchValue = event.target.elements.search.value;\r\n\r\n        // Only set loading state to true if the search string is not empty\r\n        if (searchValue.trim() !== '') {\r\n            setIsLoading(true);\r\n        }\r\n        setSearchParams({ search: searchValue });\r\n    };\r\n\r\n    // This function will handle the change of the input field\r\n    const handleInputChange = (event) => {\r\n        const searchValue = event.target.value;\r\n\r\n        // Only set loading state to true if the search string is not empty\r\n        if (searchValue.trim() !== '') {\r\n            setIsLoading(true);\r\n        }\r\n        setSearchParams({ search: searchValue });\r\n    };\r\n    \r\n    // Listen for changes in searchQuery\r\n    useEffect(() => {\r\n        setIsLoading(false);\r\n    }, [searchQuery]);\r\n\r\n    return (\r\n        <div className=\"page page1\">\r\n        <div className=\"hero-image\">\r\n            <img src=\"https://images.unsplash.com/photo-1554998171-89445e31c52b?q=80&w=1878&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\" alt=\"Hero\" />\r\n            <div className=\"hero-text\">\r\n                <h1>Cooking Events</h1>\r\n                <p>Embark on a flavorful adventure as we travel the world through its diverse cuisines. From spicy Thai curries to hearty Italian pastas, join us in creating culinary delights from every corner of the globe.</p>\r\n            </div>\r\n        </div>\r\n        <div className=\"page\">\r\n\r\n            <Form onSubmit={handleSearch}>\r\n                <div className=\"searchbar-container\">\r\n                    <div style={{ position: 'relative' }}>\r\n                        <input \r\n                            className={`searchbar ${isLoading ? \"loading\" : \"\"}`} \r\n                            type=\"text\" \r\n                            name=\"search\" \r\n                            defaultValue={searchQuery} \r\n                            placeholder=\"Search events...\"\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <div id=\"search-spinner\" aria-hidden hidden={!isLoading} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn-search\">Search</button>\r\n                </div>\r\n            </Form>\r\n            <section className=\"grid\">\r\n                {events.map(event => (\r\n                    <Link key={event._id} className=\"event-link\" to={`${event._id}`}>\r\n                        <EventCard event={event} />\r\n                    </Link>\r\n                ))}\r\n            </section>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}", "import { redirect } from \"@remix-run/node\";\r\nimport { Form, useNavigate } from \"@remix-run/react\";\r\nimport mongoose from \"mongoose\";\r\nimport { useState } from \"react\";\r\nimport { authenticator } from \"../services/auth.server\";\r\n\r\n\r\nexport const meta = () => {\r\n  return [{ title: \"Cooking classes - Add New Event\" }];\r\n};\r\n\r\n// This loader will check if the user is authenticated\r\nexport async function loader({ request }) {\r\n  return await authenticator.isAuthenticated(request, {\r\n    failureRedirect: \"/signin\",\r\n  });\r\n}\r\n\r\n// This is the form to add a new event\r\nexport default function AddEvent() {\r\n  const [image, setImage] = useState(\"https://placehold.co/600x400?text=Add+your+amazing+image\");\r\n  const navigate = useNavigate();\r\n\r\n  function handleCancel() {\r\n    navigate(-1);\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <h1>Add an Event</h1>\r\n      <Form id=\"event-form\" method=\"post\">\r\n      <div className=\"form-row\">\r\n      <div className=\"form-column\">\r\n\r\n        <label htmlFor=\"title\">Title</label>\r\n        <input id=\"title\" name=\"title\" type=\"text\" placeholder=\"Event Title...\" />\r\n\r\n        <label htmlFor=\"caption\">Caption</label>\r\n        <input id=\"caption\" name=\"caption\" type=\"text\" aria-label=\"caption\" placeholder=\"Write a caption...\" />\r\n\r\n        <label htmlFor=\"date\">Date</label>\r\n        <input id=\"date\" name=\"date\" type=\"date\" />\r\n\r\n        <label htmlFor=\"time\">Time</label>\r\n        <input id=\"time\" name=\"time\" type=\"time\" />\r\n        </div>\r\n\r\n        <div className=\"form-column\">\r\n        <label htmlFor=\"location\">Location</label>\r\n        <input id=\"location\" name=\"location\" type=\"text\" placeholder=\"Event Location...\" />\r\n\r\n        <label htmlFor=\"image\">Image URL</label>\r\n        <input name=\"image\" type=\"url\" onChange={e => setImage(e.target.value)} placeholder=\"Paste an image URL...\" />\r\n\r\n        <label htmlFor=\"image-preview\">Image Preview</label>\r\n        <img\r\n          id=\"image-preview\"\r\n          className=\"image-preview\"\r\n          src={image ? image : \"https://placehold.co/600x400?text=Paste+an+image+URL\"}\r\n          alt=\"Choose\"\r\n          onError={e => (e.target.src = \"https://placehold.co/600x400?text=Error+loading+image\")}\r\n        />\r\n        </div>\r\n        </div>\r\n\r\n        <div className=\"btns\">\r\n          <button>Save</button>\r\n          <button type=\"button\" className=\"btn-cancel\" onClick={handleCancel}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport async function action({ request }) {\r\n  const formData = await request.formData();\r\n  const event = Object.fromEntries(formData);\r\n\r\n   // Get the authenticated user\r\n   const user = await authenticator.isAuthenticated(request, {\r\n    failureRedirect: \"/signin\"\r\n  });\r\n  console.log(user);\r\n  // Add the authenticated user's id to the event.user field\r\n  event.user = user._id;\r\n  // Save the event to the database\r\n\r\n  await mongoose.models.Event.create(event);\r\n\r\n  return redirect(\"/events\");\r\n}", "import { Form, useLoaderData } from \"@remix-run/react\";\r\nimport { authenticator } from \"../services/auth.server\";\r\nimport mongoose from \"mongoose\";\r\nimport { json } from \"@remix-run/node\";\r\nimport EventCard from \"../components/EventCard\";\r\nimport { redirect } from \"@remix-run/node\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport async function loader({ request }) {\r\n  // Get the authenticated user\r\n  const authUser = await authenticator.isAuthenticated(request, {\r\n    failureRedirect: \"/signin\",\r\n  });\r\n\r\n  // Fetch the user from the database and populate eventsAttending\r\n  const user = await mongoose.models.User.findById(authUser._id)\r\n  .populate('eventsAttending');\r\n\r\n  // Get all events where the user field matches the authenticated user's ID\r\n  const events = await mongoose.models.Event.find({ user: user._id }).populate('user').exec();\r\n\r\n  return json({ user, events });\r\n}\r\n\r\nexport default function Profile() {\r\n  const { user, events } = useLoaderData();\r\n\r\n  console.log(user);\r\n\r\n  return (\r\n    <div className=\"page profileIntro\">\r\n      <h1>Profile</h1>\r\n      <div className=\"profile-container\">\r\n        <div>\r\n          <p className=\"profileP\">\r\n            Name: {user.name} {user.lastname} <br></br>\r\n            Mail: {user.mail}\r\n          </p>\r\n        </div>\r\n\r\n        <Form method=\"post\">\r\n          <button>Log out</button>\r\n        </Form>\r\n      </div>\r\n\r\n      \r\n      <h2 className=\"profile-header2\">My added events</h2>\r\n      \r\n      <div className=\"profile-event\">\r\n      {events.map(event => (\r\n        <Link to={`/events/${event._id}`} key={event._id}>\r\n          <EventCard event={event} />\r\n        </Link>\r\n      ))}\r\n    </div>\r\n     \r\n\r\n      <div id=\"events-attending\">\r\n        <h2 className=\"profile-header2\">Events Attending</h2>\r\n        <ul className=\"profile-event-attendings\">\r\n        { user.eventsAttending.map(event => (\r\n            <li className=\"li-attendingsProfile\" key={event._id}>\r\n              <Link to={`/events/${event._id}`}>\r\n                <h2>{event.title}</h2>\r\n                <br></br>\r\n                <img src={event.image} alt={event.title} />\r\n                <br></br>\r\n                {event.caption}\r\n                <br></br>\r\n                <br></br>\r\n                {event.date}, {event.time}, {event.location} \r\n              </Link>\r\n              <Form method=\"post\">\r\n                <input type=\"hidden\" name=\"eventId\" value={event._id} />\r\n                <button type=\"submit\" className=\"cancelAt\">Cancel</button>\r\n              </Form>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <br></br>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport async function action({ request }) {\r\n  const body = new URLSearchParams(await request.text());\r\n\r\n  if (body.has('eventId')) {\r\n    const eventId = body.get('eventId');\r\n\r\n    const authUser = await authenticator.isAuthenticated(request, {\r\n      failureRedirect: \"/signin\",\r\n    });\r\n\r\n    const User = mongoose.models.User;\r\n    const Event = mongoose.models.Event;\r\n\r\n    const user = await User.findById(authUser._id);\r\n    const event = await Event.findById(eventId);\r\n\r\n    // Remove the event from the user's eventsAttending array\r\n    user.eventsAttending = user.eventsAttending.filter(id => id.toString() !== eventId);\r\n    await user.save();\r\n\r\n    // Remove the user from the event's attendees array\r\n    if (event.attendees) {\r\n      event.attendees = event.attendees.filter(attendeeId => attendeeId.toString() !== authUser._id.toString());\r\n      await event.save();\r\n    }\r\n\r\n    return redirect('/profile');\r\n  }\r\n\r\n  await authenticator.logout(request, { redirectTo: \"/signin\" });\r\n}", "import { Form, useLoaderData, NavLink } from \"@remix-run/react\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { sessionStorage } from \"../services/session.server\";\r\nimport { authenticator } from \"../services/auth.server\";\r\n\r\nexport async function loader({ request }) {\r\n \r\n  await authenticator.isAuthenticated(request, {\r\n    successRedirect: \"/events\"\r\n  });\r\n  // Retrieve error message from session if present\r\n  const session = await sessionStorage.getSession(request.headers.get(\"Cookie\"));\r\n  // Get the error message from the session\r\n  const error = session.get(\"sessionErrorKey\");\r\n  return json({ error }); \r\n}\r\n\r\nexport default function SignIn() {\r\n  // if i got an error it will come back with the loader dxata\r\n  const loaderData = useLoaderData();\r\n  console.log(\"loaderData\", loaderData);\r\n\r\n  return (\r\n    <div id=\"sign-in-page\" className=\"page\">\r\n      <h1>Sign In</h1>\r\n      <div className=\"form-container\">\r\n      <Form id=\"sign-in-form\" method=\"post\">\r\n        <label htmlFor=\"mail\">Mail</label>\r\n        <input id=\"mail\" \r\n        type=\"email\" \r\n        name=\"mail\" \r\n        aria-label=\"mail\" \r\n        placeholder=\"Type your mail...\" \r\n        required />\r\n\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          id=\"password\" \r\n          type=\"password\" \r\n          name=\"password\" \r\n          aria-label=\"password\" \r\n          placeholder=\"Type your password...\" \r\n          autoComplete=\"current-password\"/>\r\n          \r\n        <div className=\"btns\">\r\n          <button className=\"signinbtn\">Sign In</button>\r\n        </div>\r\n        <div className=\"error-message\">{loaderData?.error ? <p>{loaderData?.error?.message}</p> : null}</div>\r\n      </Form>\r\n      <img src=\"https://images.unsplash.com/photo-1505576399279-565b52d4ac71?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\" alt=\"food img\" />\r\n      </div>\r\n      \r\n      <p style={{textAlign: 'center'}}>\r\n        If you do not have an account then sign up here: <NavLink to=\"/signup\"><b>Sign up here</b></NavLink>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport async function action({ request }) {\r\n  \r\n  console.log(\"handle\");\r\n  return await authenticator.authenticate(\"user-pass\", request, {\r\n    successRedirect: \"/events\",\r\n    failureRedirect: \"/signin\"\r\n  });\r\n}", "import { json, redirect } from \"@remix-run/node\";\r\nimport { Form, NavLink, useLoaderData } from \"@remix-run/react\";\r\nimport { sessionStorage } from \"../services/session.server\";\r\nimport mongoose from \"mongoose\";\r\n\r\nexport async function loader({ request }) {\r\n  // Retrieve error message from session if present\r\n  const session = await sessionStorage.getSession(request.headers.get(\"Cookie\"));\r\n  // Get the error message from the session\r\n  const error = session.get(\"sessionErrorKey\");\r\n  return json({ error }); \r\n}\r\n\r\nexport default function SignUp() {\r\n    // if i got an error it will come back with the loader dxata\r\n  const loaderData = useLoaderData();\r\n  console.log(\"loaderData\", loaderData);\r\n\r\n    return (\r\n      <div id=\"sign-up-page\" className=\"page\">\r\n        <h1>Sign Up</h1>\r\n        <Form id=\"sign-up-form\" method=\"post\">\r\n        \r\n      <div className=\"input-group\">\r\n        <div className=\"input-field\">\r\n         <label htmlFor=\"name\">Name</label>\r\n         <input id=\"name\" \r\n         type=\"text\" \r\n         name=\"name\" \r\n         aria-label=\"name\" \r\n         placeholder=\"Type your name...\" \r\n         required />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n        <label htmlFor=\"lastname\">Last Name</label>\r\n        <input id=\"lastname\" \r\n        type=\"text\" \r\n        name=\"lastname\" \r\n        aria-label=\"lastname\" \r\n        placeholder=\"Type your last name...\" \r\n        required />\r\n        </div>\r\n      </div>\r\n\r\n        <label htmlFor=\"mail\">Mail</label>\r\n        <input id=\"mail\" \r\n        type=\"email\" \r\n        name=\"mail\" \r\n        aria-label=\"mail\" \r\n        placeholder=\"Type your mail...\" \r\n        required />\r\n\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input id=\"password\" \r\n        type=\"password\" \r\n        name=\"password\" \r\n        aria-label=\"password\" \r\n        placeholder=\"Type your password...\" \r\n        autoComplete=\"current-password\"/>\r\n          \r\n          <div className=\"btns\">\r\n            <button>Sign up</button>\r\n          </div>\r\n          <div className=\"error-message\">{loaderData?.error ? <p>{loaderData?.error?.message}</p> : null}</div>\r\n        </Form>\r\n        <p  style={{textAlign: 'center'}}>\r\n        Already have an account? <NavLink to=\"/signin\"><b>Sign in here.</b></NavLink>\r\n      </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export async function action({ request }) {\r\n    const formData = await request.formData(); \r\n    const newUser = Object.fromEntries(formData); // convert the form data to an object\r\n\r\n    // Validate user input\r\n    if (!newUser.mail || !newUser.mail.trim().includes('@') || !newUser.mail.trim().includes('.')) {\r\n      // Store the error message in the session\r\n      const session = await sessionStorage.getSession(request.headers.get(\"Cookie\"));\r\n      session.set(\"sessionErrorKey\", { message: \"Invalid email address\" });\r\n      const cookie = await sessionStorage.commitSession(session);\r\n      return redirect(\"/signup\", { headers: { \"Set-Cookie\": cookie } });\r\n    }\r\n\r\n    if (!newUser.password || newUser.password.trim().length < 8 || !/[a-z]/i.test(newUser.password.trim()) || !/[0-9]/.test(newUser.password.trim())) {\r\n      // Store the error message in the session\r\n      const session = await sessionStorage.getSession(request.headers.get(\"Cookie\"));\r\n      session.set(\"sessionErrorKey\", { message: \"Password must be at least 8 characters long and contain at least one letter and one number\" });\r\n      const cookie = await sessionStorage.commitSession(session);\r\n      return redirect(\"/signup\", { headers: { \"Set-Cookie\": cookie } });\r\n    }\r\n\r\n    const result = await mongoose.models.User.create(newUser); \r\n\r\n    // If the user is created successfully redirect to /signin\r\n    if (result) {\r\n      return redirect(\"/signin\");\r\n    } else {\r\n      return redirect(\"/signup\");\r\n    }\r\n  }\r\n \r\n ", "import { redirect } from \"@remix-run/node\";\r\n\r\nexport const meta = () => {\r\n  return [{ title: \"Cooking classes\" }];\r\n};\r\n\r\nexport async function loader() {\r\n  return redirect(\"/events\");\r\n}\r\n", "export default {'entry':{'module':'/build/entry.client-TI2CDGZI.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-6IXSECH5.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-QHXNCULF.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-RKQR3CTL.js','imports':['/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-FW7M6VLH.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/add-event':{'id':'routes/add-event','parentId':'root','path':'add-event','index':undefined,'caseSensitive':undefined,'module':'/build/routes/add-event-5G3ZKJLZ.js','imports':['/build/_shared/chunk-SARLQUTN.js','/build/_shared/chunk-5DGVIEP4.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/events.$eventId':{'id':'routes/events.$eventId','parentId':'root','path':'events/:eventId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/events.$eventId-2S2HYZOV.js','imports':['/build/_shared/chunk-QUYRSHBJ.js','/build/_shared/chunk-MBJ5RI2F.js','/build/_shared/chunk-SARLQUTN.js','/build/_shared/chunk-5DGVIEP4.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/events.$eventId.destroy':{'id':'routes/events.$eventId.destroy','parentId':'routes/events.$eventId','path':'destroy','index':undefined,'caseSensitive':undefined,'module':'/build/routes/events.$eventId.destroy-2JO335JF.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/events.$eventId_.update':{'id':'routes/events.$eventId_.update','parentId':'root','path':'events/:eventId/update','index':undefined,'caseSensitive':undefined,'module':'/build/routes/events.$eventId_.update-PKYALSWW.js','imports':['/build/_shared/chunk-SARLQUTN.js','/build/_shared/chunk-5DGVIEP4.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/events._index':{'id':'routes/events._index','parentId':'root','path':'events','index':true,'caseSensitive':undefined,'module':'/build/routes/events._index-LXUVV6UH.js','imports':['/build/_shared/chunk-MBJ5RI2F.js','/build/_shared/chunk-5DGVIEP4.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/profile':{'id':'routes/profile','parentId':'root','path':'profile','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile-2YW3PTNI.js','imports':['/build/_shared/chunk-MBJ5RI2F.js','/build/_shared/chunk-SARLQUTN.js','/build/_shared/chunk-5DGVIEP4.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/signin':{'id':'routes/signin','parentId':'root','path':'signin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/signin-43ZK3O5Y.js','imports':['/build/_shared/chunk-QUYRSHBJ.js','/build/_shared/chunk-SARLQUTN.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/signup':{'id':'routes/signup','parentId':'root','path':'signup','index':undefined,'caseSensitive':undefined,'module':'/build/routes/signup-G3LTTYAL.js','imports':['/build/_shared/chunk-QUYRSHBJ.js','/build/_shared/chunk-5DGVIEP4.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'85709d0c','hmr':{'runtime':'/build/_shared\\\\chunk-QHXNCULF.js','timestamp':1710283853635},'url':'/build/manifest-85709D0C.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\nadia\\\\awu-exam-Nadia-Anjum\\\\app\\\\entry.server.jsx\";\nimport * as route0 from \"./root.jsx\";\nimport * as route1 from \"./routes/events.$eventId.destroy.jsx\";\nimport * as route2 from \"./routes/events.$eventId_.update.jsx\";\nimport * as route3 from \"./routes/events.$eventId.jsx\";\nimport * as route4 from \"./routes/events._index.jsx\";\nimport * as route5 from \"./routes/add-event.jsx\";\nimport * as route6 from \"./routes/profile.jsx\";\nimport * as route7 from \"./routes/signin.jsx\";\nimport * as route8 from \"./routes/signup.jsx\";\nimport * as route9 from \"./routes/_index.jsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/events.$eventId.destroy\": {\n      id: \"routes/events.$eventId.destroy\",\n      parentId: \"routes/events.$eventId\",\n      path: \"destroy\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/events.$eventId_.update\": {\n      id: \"routes/events.$eventId_.update\",\n      parentId: \"root\",\n      path: \"events/:eventId/update\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/events.$eventId\": {\n      id: \"routes/events.$eventId\",\n      parentId: \"root\",\n      path: \"events/:eventId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/events._index\": {\n      id: \"routes/events._index\",\n      parentId: \"root\",\n      path: \"events\",\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/add-event\": {\n      id: \"routes/add-event\",\n      parentId: \"root\",\n      path: \"add-event\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/profile\": {\n      id: \"routes/profile\",\n      parentId: \"root\",\n      path: \"profile\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/signin\": {\n      id: \"routes/signin\",\n      parentId: \"root\",\n      path: \"signin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/signup\": {\n      id: \"routes/signup\",\n      parentId: \"root\",\n      path: \"signup\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route9\n    }\n  };"],
  "mappings": "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",
  "names": ["mongoose", "mongoose", "mongoose", "useLoaderData", "jsxDEV", "bcrypt", "mongoose", "jsxDEV", "useLoaderData", "mongoose", "action", "loader", "json", "redirect", "useLoaderData", "mongoose", "useState", "jsxDEV", "loader", "mongoose", "json", "useLoaderData", "useState", "action", "redirect", "action", "loader", "json", "redirect", "Form", "useLoaderData", "mongoose", "jsxDEV", "jsxDEV", "loader", "mongoose", "json", "useLoaderData", "event", "Form", "action", "redirect", "Event", "loader", "json", "Link", "useLoaderData", "mongoose", "useState", "Form", "jsxDEV", "loader", "json", "useLoaderData", "Link", "action", "loader", "meta", "redirect", "Form", "useNavigate", "mongoose", "useState", "jsxDEV", "meta", "loader", "useState", "useNavigate", "Form", "action", "mongoose", "redirect", "action", "loader", "Form", "useLoaderData", "mongoose", "json", "redirect", "Link", "jsxDEV", "loader", "mongoose", "json", "useLoaderData", "Form", "action", "Event", "action", "loader", "Form", "useLoaderData", "NavLink", "json", "jsxDEV", "loader", "json", "useLoaderData", "Form", "NavLink", "action", "action", "loader", "json", "redirect", "Form", "NavLink", "useLoaderData", "mongoose", "jsxDEV", "loader", "json", "useLoaderData", "Form", "NavLink", "action", "redirect", "loader", "meta", "redirect"]
}
