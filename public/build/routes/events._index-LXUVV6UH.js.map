{
  "version": 3,
  "sources": ["../../../app/routes/events._index.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\events._index.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\events._index.jsx\");\n  import.meta.hot.lastModified = \"1710277249881.2935\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { Link, useLoaderData, useSearchParams } from \"@remix-run/react\";\nimport EventCard from \"../components/EventCard\";\nimport mongoose from \"mongoose\";\nimport { useState } from \"react\";\nimport { Form } from \"@remix-run/react\";\nimport { useEffect } from \"react\";\nexport async function loader({\n  request\n}) {\n  const url = new URL(request.url);\n  const searchParams = new URLSearchParams(url.search); // get the search query from the URL\n  const searchQuery = searchParams.get('search') || '';\n  let query = {};\n\n  // If there is a search query, we will search for events that match the query\n  if (searchQuery) {\n    query = {\n      $or: [{\n        title: {\n          $regex: searchQuery,\n          $options: 'i'\n        }\n      }, {\n        date: {\n          $regex: searchQuery,\n          $options: 'i'\n        }\n      }, {\n        location: {\n          $regex: searchQuery,\n          $options: 'i'\n        }\n      }]\n    };\n  }\n  const events = await mongoose.models.Event.find(query).populate(\"user\").sort({\n    createdAt: -1\n  }).exec();\n  return json({\n    events\n  });\n}\nexport default function Index() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('search') || '';\n\n  // Add a new state variable for loading state\n  const [isLoading, setIsLoading] = useState(false);\n\n  // This function will handle the search form submission\n  const handleSearch = event => {\n    event.preventDefault();\n    const searchValue = event.target.elements.search.value;\n\n    // Only set loading state to true if the search string is not empty\n    if (searchValue.trim() !== '') {\n      setIsLoading(true);\n    }\n    setSearchParams({\n      search: searchValue\n    });\n  };\n\n  // This function will handle the change of the input field\n  const handleInputChange = event => {\n    const searchValue = event.target.value;\n\n    // Only set loading state to true if the search string is not empty\n    if (searchValue.trim() !== '') {\n      setIsLoading(true);\n    }\n    setSearchParams({\n      search: searchValue\n    });\n  };\n\n  // Listen for changes in searchQuery\n  useEffect(() => {\n    setIsLoading(false);\n  }, [searchQuery]);\n  return <div className=\"page page1\">\r\n        <div className=\"hero-image\">\r\n            <img src=\"https://images.unsplash.com/photo-1554998171-89445e31c52b?q=80&w=1878&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\" alt=\"Hero\" />\r\n            <div className=\"hero-text\">\r\n                <h1>Cooking Events</h1>\r\n                <p>Embark on a flavorful adventure as we travel the world through its diverse cuisines. From spicy Thai curries to hearty Italian pastas, join us in creating culinary delights from every corner of the globe.</p>\r\n            </div>\r\n        </div>\r\n        <div className=\"page\">\r\n\r\n            <Form onSubmit={handleSearch}>\r\n                <div className=\"searchbar-container\">\r\n                    <div style={{\n            position: 'relative'\n          }}>\r\n                        <input className={`searchbar ${isLoading ? \"loading\" : \"\"}`} type=\"text\" name=\"search\" defaultValue={searchQuery} placeholder=\"Search events...\" onChange={handleInputChange} />\r\n                        <div id=\"search-spinner\" aria-hidden hidden={!isLoading} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn-search\">Search</button>\r\n                </div>\r\n            </Form>\r\n            <section className=\"grid\">\r\n                {events.map(event => <Link key={event._id} className=\"event-link\" to={`${event._id}`}>\r\n                        <EventCard event={event} />\r\n                    </Link>)}\r\n            </section>\r\n\r\n            </div>\r\n        </div>;\n}\n_s(Index, \"TLXXQxiP5l0Hv6PvA1nIO5MTIZ8=\", false, function () {\n  return [useLoaderData, useSearchParams];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "import_react"]
}
