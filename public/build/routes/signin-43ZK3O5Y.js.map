{
  "version": 3,
  "sources": ["../../../app/routes/signin.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\signin.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\signin.jsx\");\n  import.meta.hot.lastModified = \"1710277249884.804\";\n}\n// REMIX HMR END\n\nimport { Form, useLoaderData, NavLink } from \"@remix-run/react\";\nimport { json } from \"@remix-run/node\";\nimport { sessionStorage } from \"../services/session.server\";\nimport { authenticator } from \"../services/auth.server\";\nexport async function loader({\n  request\n}) {\n  await authenticator.isAuthenticated(request, {\n    successRedirect: \"/events\"\n  });\n  // Retrieve error message from session if present\n  const session = await sessionStorage.getSession(request.headers.get(\"Cookie\"));\n  // Get the error message from the session\n  const error = session.get(\"sessionErrorKey\");\n  return json({\n    error\n  });\n}\nexport default function SignIn() {\n  _s();\n  // if i got an error it will come back with the loader dxata\n  const loaderData = useLoaderData();\n  console.log(\"loaderData\", loaderData);\n  return <div id=\"sign-in-page\" className=\"page\">\r\n      <h1>Sign In</h1>\r\n      <div className=\"form-container\">\r\n      <Form id=\"sign-in-form\" method=\"post\">\r\n        <label htmlFor=\"mail\">Mail</label>\r\n        <input id=\"mail\" type=\"email\" name=\"mail\" aria-label=\"mail\" placeholder=\"Type your mail...\" required />\r\n\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input id=\"password\" type=\"password\" name=\"password\" aria-label=\"password\" placeholder=\"Type your password...\" autoComplete=\"current-password\" />\r\n          \r\n        <div className=\"btns\">\r\n          <button className=\"signinbtn\">Sign In</button>\r\n        </div>\r\n        <div className=\"error-message\">{loaderData?.error ? <p>{loaderData?.error?.message}</p> : null}</div>\r\n      </Form>\r\n      <img src=\"https://images.unsplash.com/photo-1505576399279-565b52d4ac71?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\" alt=\"food img\" />\r\n      </div>\r\n      \r\n      <p style={{\n      textAlign: 'center'\n    }}>\r\n        If you do not have an account then sign up here: <NavLink to=\"/signup\"><b>Sign up here</b></NavLink>\r\n      </p>\r\n    </div>;\n}\n_s(SignIn, \"ceKF1Gd7W4lGV+M78eBsU+KQIkw=\", false, function () {\n  return [useLoaderData];\n});\n_c = SignIn;\nexport async function action({\n  request\n}) {\n  console.log(\"handle\");\n  return await authenticator.authenticate(\"user-pass\", request, {\n    successRedirect: \"/events\",\n    failureRedirect: \"/signin\"\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"SignIn\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,kBAAqB;AACrB,qBAA+B;AAC/B,kBAA8B;AAqBxB;AA5CN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,kCAAoC,EAAE;AAAA,EAC/E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyB;AACzB,cAAY,IAAI,eAAe;AACjC;AAqBe,SAAR,SAA0B;AAC/B,KAAG;AAEH,QAAM,aAAa,cAAc;AACjC,UAAQ,IAAI,cAAc,UAAU;AACpC,SAAO,mDAAC,SAAI,IAAG,gBAAe,WAAU,QACpC;AAAA,uDAAC,QAAG,uBAAJ;AAAA;AAAA;AAAA;AAAA,WAAW;AAAA,IACX,mDAAC,SAAI,WAAU,kBACf;AAAA,yDAAC,QAAK,IAAG,gBAAe,QAAO,QAC7B;AAAA,2DAAC,WAAM,SAAQ,QAAO,oBAAtB;AAAA;AAAA;AAAA;AAAA,eAA0B;AAAA,QAC1B,mDAAC,WAAM,IAAG,QAAO,MAAK,SAAQ,MAAK,QAAO,cAAW,QAAO,aAAY,qBAAoB,UAAQ,QAApG;AAAA;AAAA;AAAA;AAAA,eAAqG;AAAA,QAErG,mDAAC,WAAM,SAAQ,YAAW,wBAA1B;AAAA;AAAA;AAAA;AAAA,eAAkC;AAAA,QAClC,mDAAC,WAAM,IAAG,YAAW,MAAK,YAAW,MAAK,YAAW,cAAW,YAAW,aAAY,yBAAwB,cAAa,sBAA5H;AAAA;AAAA;AAAA;AAAA,eAA+I;AAAA,QAE/I,mDAAC,SAAI,WAAU,QACb,6DAAC,YAAO,WAAU,aAAY,uBAA9B;AAAA;AAAA;AAAA;AAAA,eAAqC,KADvC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,SAAI,WAAU,iBAAiB,sBAAY,QAAQ,mDAAC,OAAG,sBAAY,OAAO,WAAvB;AAAA;AAAA;AAAA;AAAA,eAA+B,IAAO,QAA1F;AAAA;AAAA;AAAA;AAAA,eAA+F;AAAA,WAVjG;AAAA;AAAA;AAAA;AAAA,aAWA;AAAA,MACA,mDAAC,SAAI,KAAI,0KAAyK,KAAI,cAAtL;AAAA;AAAA;AAAA;AAAA,aAAiM;AAAA,SAbjM;AAAA;AAAA;AAAA;AAAA,WAcA;AAAA,IAEA,mDAAC,OAAE,OAAO;AAAA,MACV,WAAW;AAAA,IACb,GAAG;AAAA;AAAA,MACkD,mDAAC,WAAQ,IAAG,WAAU,6DAAC,OAAE,4BAAH;AAAA;AAAA;AAAA;AAAA,aAAe,KAArC;AAAA;AAAA;AAAA;AAAA,aAAyC;AAAA,SAH5F;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,OAtBG;AAAA;AAAA;AAAA;AAAA,SAuBL;AACJ;AACA,GAAG,QAAQ,gCAAgC,OAAO,WAAY;AAC5D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AAUL,IAAI;AACJ,aAAa,IAAI,QAAQ;AAEzB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
